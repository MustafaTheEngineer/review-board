package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.81

import (
	"context"
	"net/http"

	graph "github.com/MustafaTheEngineer/review_board/graph/generated"
	"github.com/MustafaTheEngineer/review_board/graph/model"
	"github.com/MustafaTheEngineer/review_board/helpers"
	"github.com/MustafaTheEngineer/review_board/types"
)

// ValidateToken is the resolver for the validateToken field.
func (r *queryResolver) ValidateToken(ctx context.Context) (*model.TokenValidationResponse, error) {
	userContext, ok := ctx.Value(types.UserContextKey).(types.UserContext)
	if !ok {
		helpers.CreateGraphQLError(ctx, "Username check requires authentication", http.StatusUnauthorized)
		return nil, nil
	}
	return &model.TokenValidationResponse{
		User: &userContext.User,
	}, nil
}

// Query returns graph.QueryResolver implementation.
func (r *Resolver) Query() graph.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
