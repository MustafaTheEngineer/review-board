directive @validateItemTitle on FIELD_DEFINITION
directive @validateItemAmount on FIELD_DEFINITION
directive @validateItemTags on FIELD_DEFINITION
directive @isAdmin on FIELD_DEFINITION

enum ItemStatus {
  NEW
  IN_REVIEW
  APPROVED
  REJECTED
}

type Item {
  id: ID!
  creatorID: ID!
  title: String!
  description: String
  amount: String!
  riskScore: Int!
  status: ItemStatus!
  deletedByUserID: ID
  deletedAt: Date
  createdAt: Date!
  updatedAt: Date!
}

extend type Mutation {
  createItem(input: CreateItemRequest!): CreateItemResponse
    @validateItemTags
    @validateItemAmount
    @validateItemTitle
    @checkUsername
    @checkIfConfirmed
    @validateToken
  updateItem(input: UpdateItemRequest!): CreateItemResponse
    @validateItemTags
    @validateItemAmount
    @validateItemTitle
    @checkUsername
    @checkIfConfirmed
    @validateToken
  updateItemStatus(id: ID!, status: ItemStatus!): Item!
    @isAdmin
    @checkUsername
    @checkIfConfirmed
    @validateToken
}

input CreateItemRequest {
  title: String!
  description: String
  amount: Float!
  tags: [String!]!
}

input UpdateItemRequest {
  id: ID!
  title: String!
  description: String
  amount: Float!
  tags: [String!]!
}

type CreateItemResponse {
  item: Item!
  tags: [String!]!
}

extend type Query {
  items(query: ItemsRequest): [ItemsResponse!]!
  item(id: ID!): Item
}

input ItemsRequest {
  like: String
  users: [String!]
  tags: [String!]
  statuses: [ItemStatus!]
  limit: Int
  offset: Int
}

type ItemsResponse {
  item: Item!
  tags: [Tag!]!
}
